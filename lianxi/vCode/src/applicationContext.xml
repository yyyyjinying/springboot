<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.bjsxt.advice,com.bjsxt.test"></context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    <!-- 数据源封装类 .数据源:获取数据库连接,spring-jdbc.jar中-->
    <bean id="dataSouce" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ssm?useSSL=false&amp;serverTimezone=UTC"/>
        <!--<property name="url" value="jdbc:mysql://localhost:3306/ssm?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf-8"/>-->
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>
    <!-- 创建SqlSessionFactory对象 -->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接信息来源于dataSource -->
        <property name="dataSource" ref="dataSouce"></property>
    </bean>
    <!-- 扫描器相当于mybatis.xml中 mappers下package标签,扫描com.bjsxt.mapper包后会给对应接口创建对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 要扫描哪个包 -->
        <property name="basePackage" value="com.bjsxt.mapper"></property>
        <!-- 和factory产生关系 -->
        <property name="sqlSessionFactory" ref="factory"></property>
    </bean>

    <!--创建service-->
    <bean id="usersService" class="com.bjsxt.service.impl.UsersServiceImpl">
        <property name="usersMapper" ref="usersMapper"></property>
    </bean>

    <!--<bean id="demo" class="com.bjsxt.test.Demo"></bean>-->
    <!--<bean id="myadvice" class="com.bjsxt.advice.MyAdvice"></bean>-->
    <!--<aop:config>-->
        <!--<aop:aspect ref="myadvice">-->
            <!--<aop:pointcut expression="execution(* com.bjsxt.test.Demo.demo1(String,int)) and args(name1,age1)" id="mypoint"/>-->
            <!--<aop:pointcut expression="execution(* com.bjsxt.test.Demo.demo1(String)) and args(name1)" id="mypoint1"/>-->
            <!--<aop:before method="mybefore" pointcut-ref="mypoint" arg-names="name1,age1"/>-->
            <!--<aop:before method="mybefore1" pointcut-ref="mypoint1" arg-names="name1"/>-->
            <!--&lt;!&ndash;<aop:after method="myafter" pointcut-ref="mypoint"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-returning method="myaftering" pointcut-ref="mypoint"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-throwing method="mythrow" pointcut-ref="mypoint"/>&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:around method="myarround"  pointcut-ref="mypoint"/>&ndash;&gt;-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!-- 配置通知类对象,在切面中引入 -->
    <!--<bean id="mybefore" class="com.bjsxt.advice.MyBeforeAdvice"></bean>-->
    <!--<bean id="myAfterAdvice" class="com.bjsxt.advice.MyAfterAdvice"></bean>-->

    <!--<aop:config>-->

        <!--&lt;!&ndash; 配置切点 &ndash;&gt;-->
        <!--&lt;!&ndash;指定包下的任意类中的任意方法&ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.bjsxt.test.*.*(..))" id="mypoint"/>-->
        <!--&lt;!&ndash;指定方法的任意参数&ndash;&gt;-->
        <!--&lt;!&ndash;<aop:pointcut expression="execution(* com.bjsxt.test.Demo.*(..))" id="mypoint"/>&ndash;&gt;-->
        <!--&lt;!&ndash;指定exception 单个方法&ndash;&gt;-->
        <!--&lt;!&ndash;<aop:pointcut expression="execution(* com.bjsxt.test.Demo.demo2())" id="mypoint"/>&ndash;&gt;-->
        <!--&lt;!&ndash; 前置通知 &ndash;&gt;-->
        <!--<aop:advisor advice-ref="mybefore" pointcut-ref="mypoint"/>-->
        <!--&lt;!&ndash;h后置通知&ndash;&gt;-->
        <!--<aop:advisor advice-ref="myAfterAdvice" pointcut-ref="mypoint"></aop:advisor>-->
    <!--</aop:config>-->

    <!--<bean id="mythrow" class="com.bjsxt.advice.MyThrowAdvice"></bean>-->
    <!--<bean id="myArround" class="com.bjsxt.advice.MyArround"></bean>-->

    <!--<aop:config>-->
        <!--<aop:aspect ref="mythrow">-->

            <!--<aop:pointcut id="mypoint" expression="execution(* com.bjsxt.test.Demo.demo2())"></aop:pointcut>-->
            <!--<aop:after-throwing  pointcut-ref="mypoint" throwing="ex" method="afterThrowing"></aop:after-throwing>-->

        <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="mypoint" expression="execution(* com.bjsxt.test.Demo.demo2())"></aop:pointcut>-->
        <!--<aop:advisor advice-ref="mythrow" pointcut-ref="mypoint"></aop:advisor>-->
    <!--</aop:config>-->

    <!--<aop:config>-->
        <!--<aop:pointcut id="myArroundPoint" expression="execution(* com.bjsxt.test.Demo.demo2())"></aop:pointcut>-->
        <!--<aop:advisor advice-ref="myArround" pointcut-ref="myArroundPoint"></aop:advisor>-->
    <!--</aop:config>-->
    <!--<bean id="demo" class="com.bjsxt.test.Demo"></bean>-->
    <!--<bean id="demo1" class="com.bjsxt.test.Demo1"></bean>-->

    <bean id="myService" class="com.bjsxt.advice.MyAdvice"></bean>
    <aop:config>
        <aop:aspect ref="myService">
            <aop:pointcut id="mypoint" expression="execution(* com.bjsxt.test.Demo.demo2(String,int)) and args(name,age)"></aop:pointcut>
            <aop:pointcut id="mypoint1" expression="execution(* com.bjsxt.test.Demo.demo2(String)) and args(name)"></aop:pointcut>

            <!--<aop:pointcut expression="execution(* com.bjsxt.test.Demo.demo2(String,int)) and args(name1,age1)" id="mypoint2"/>-->

            <aop:before method="mybefore" pointcut-ref="mypoint" arg-names="name,age"/>
            <aop:before method="mybefore1" pointcut-ref="mypoint1" arg-names="name"/>
            <!--<aop:before method="mybefore2" pointcut-ref="mypoint2" arg-names="name1,age1"/>-->
            <!--<aop:after-returning method="myaftering" pointcut-ref="mypoint"></aop:after-returning>-->
            <!--<aop:after method="myafter" pointcut-ref="mypoint"></aop:after>-->
            <!--<aop:after-throwing method="mythrow" pointcut-ref="mypoint"></aop:after-throwing>-->
            <!--<aop:around method="myarround" pointcut-ref="mypoint"></aop:around>-->
        </aop:aspect>
    </aop:config>

    <bean id="demo" class="com.bjsxt.test.Demo"></bean>

</beans>